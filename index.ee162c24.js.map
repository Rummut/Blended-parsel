{"mappings":"YA0IA,IAAMA,EAASC,SAASC,cAAc,cAChCC,EAASF,SAASC,cAAc,SAEhCE,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAmB3D,SAASC,IACPN,EAAOO,UAAY,GACnB,IAAMC,EAASP,EACZQ,KACC,SAACC,EAAMC,G,MACL,UAAwDC,OAA9CF,EAAK,2CAA+CE,OAAND,EAAM,wB,IAEjEE,KAAK,IACRb,EAAOc,UAAYN,C,CAYrB,SAASO,IACPX,aAAaY,QAAQ,QAASd,KAAKe,UAAUhB,G,CAvC/CK,IAEAT,EAAOqB,iBAAiB,UAGxB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAMV,EAAOb,EAAOwB,SAASC,SAASC,MAAMC,OAE5C,IAAKd,EACH,OAEFT,EAAMwB,KAAKf,GACXJ,IACAS,G,IAZFf,EAAOkB,iBAAiB,SAyBxB,SAAkBC,GAChB,GAAyB,WAArBA,EAAEO,OAAOC,QACX,OAEF,IAAMhB,EAAQQ,EAAEO,OAAOE,QAAQjB,MAC/BV,EAAM4B,OAAOlB,EAAO,GACpBL,IACAS,G","sources":["src/index.js"],"sourcesContent":["//TODO:==============================================\n/*\nЗавдання 1\nНатискання на кнопку \"SHOW ME\" має виводити значення з поля введення \n(дивіться на елементи в html-розмітці)\n*/\n// const ref = {\n//     buttonRef: document.querySelector(\"#alertButton\"),\n//     input: document.querySelector(\"#alertInput\")\n// }\n\n// const onButtonClick = () => {\n//     const inputValue = ref.input.value\n//     ref.input.value = \"\"\n//     console.log(inputValue)\n// }\n// ref.buttonRef.addEventListener(\"click\", onButtonClick)\n\n//TODO:==============================================\n/*\nЗавдання 2\nПісля натискання кнопки \"SWAP ME\" здійснюється обмін вмістом між двома інпутами.\nВи можете натиснути на неї кілька разів або вручну змінити вміст інпутів.\n*/\n\n// const ref = {\n//     buttonRef: document.querySelector(\"#swapButton\"),\n//     inputLeftRef: document.querySelector(\"#leftSwapInput\"),\n// inputRightRef: document.querySelector(\"#rightSwapInput\")\n// }\n// const onButtonClick = () => {\n//    const leftInputValue = ref.inputLeftRef.value\n//     const rightInputValue = ref.inputRightRef.value\n//     ref.inputLeftRef.value = rightInputValue\n//     ref.inputRightRef.value = leftInputValue\n\n// }\n// ref.buttonRef.addEventListener(\"click\", onButtonClick)\n\n//TODO:==============================================\n/*\nЗавдання 3\nКнопка \"Приховати\" ховає текст і замінює назву кнопки на\n\"Розкрити\", при повторному натисканні текст знову стає доступним\nі кнопка набуває початкового вигляду.\n*/\n// const ref = {\n//   buttonRef: document.querySelector('#passwordButton'),\n//   inputRef: document.querySelector('#passwordInput'),\n// };\n\n// ref.buttonRef.addEventListener('click', onButtonClick);\n\n// function onButtonClick(event) {\n//   if (ref.inputRef.type === 'password') {\n//     ref.buttonRef.textContent = 'Приховати';\n//     ref.inputRef.type = 'text';\n//     return;\n//   }\n//   ref.buttonRef.textContent = 'Розкрити';\n//   ref.inputRef.type = 'password';\n// }\n\n// Отримуємо необхідні елементи з DOM\n// Задача 1 Створіть HTML сторінку з табличкою,\n//  яка містить список продуктів.Кожен рядок у\n//  табличці повинен містити назву продукту та його ціну.\n//  При натисканні на будь - який рядок у табличці відобразіть\n//  повідомлення з назвою продукту та його ціною.\n\n// const productTable = document.querySelector('#productTable');\n\n// Створіть HTML сторінку з формою,\n// яка містить поле введення для введення\n// імені користувача та кнопку.При натисканні\n// на кнопку відобразіть повідомлення з привітанням з іменем користувача.\n\n// const ref = {\n//   inputRef: document.querySelector('#username'),\n//   buttonRef: document.querySelector('#greetingButton'),\n//   messageRef: document.querySelector('#greetingMessage'),\n// };\n\n// const onButtonClick = () => {\n//   const greetingMessage = `Hello, ${ref.inputRef.value} `;\n//   ref.messageRef.textContent = greetingMessage;\n// };\n// ref.buttonRef.addEventListener('click', onButtonClick);\n\n// Написати функцію, яка буде створювати список // подій клавіатури event.key та event.code\n//Додати класи на список eventList, на елементи //eventCode та eventKey\n\n// const eventThumb = document.querySelector('.eventThumb');\n// const arrey = [];\n// const render = () => {\n//   const markup = arrey\n//     .map(element => {\n//       return `<ul class = \"eventList\">\n//     <li class = \"eventKey\">${element.key}</li>\n//     <li class = \"eventCode\">${element.code}</li>\n//     </ul>`;\n//     })\n//     .join('');\n//   eventThumb.insertAdjacentHTML('beforeend', markup);\n// };\n\n// document.addEventListener('keydown', event => {\n//   arrey.push({ key: event.key, code: event.code });\n// console.log('key: ', event.key);\n// console.log('code: ', event.code);\n//   render();\n// });\n//TODO:==============================================\n/*\nЗавдання 9\nВидалити зі списку елементи, які позначені.\n*/\n\n//TODO:==============================================\n/*\nЗавдання 10\nНаведено список людей. Зроби можливість сортування списку на ім'я та на прізвище.\n*/\n\n//TODO:==============================================\n/*\n\nЗавдання 11\nНаведено список людей. Зроби фільтр на ім'я/прізвище.\n*/\n\n// Створи перелік справ.\n// Є інпут, який вводиться назва завдання.\n// Після натискання на кнопку \"Додати\" завдання додається до списку #list.\n// Поруч із кожним завданням знаходиться кнопка \"Видалити\", щоб можна було\n// Забрати завдання зі списку.\n// Список із завданнями має бути доступним після перезавантаження сторінки.\n\nconst formEl = document.querySelector('#task-form');\nconst listEl = document.querySelector('#list');\n\nconst tasks = JSON.parse(localStorage.getItem('tasks')) || [];\nrender();\n\nformEl.addEventListener('submit', onSubmit);\nlistEl.addEventListener('click', onDelete);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const task = formEl.elements.taskName.value.trim();\n\n  if (!task) {\n    return;\n  }\n  tasks.push(task);\n  render();\n  onSave();\n}\n\nfunction render() {\n  listEl.innerHtml = '';\n  const murkup = tasks\n    .map(\n      (task, index) =>\n        `<li><p>${task}</p><button type=\"button\" data-index = ${index}>delete</button></li>`\n    )\n    .join('');\n  listEl.innerHTML = murkup;\n}\nfunction onDelete(e) {\n  if (e.target.tagName !== 'BUTTON') {\n    return;\n  }\n  const index = e.target.dataset.index;\n  tasks.splice(index, 1);\n  render();\n  onSave();\n}\n\nfunction onSave() {\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n// const getItem = JSON.parse(localStorage.getItem('tasks'));\n"],"names":["$b8f9b7833fa37166$var$formEl","document","querySelector","$b8f9b7833fa37166$var$listEl","$b8f9b7833fa37166$var$tasks","JSON","parse","localStorage","getItem","$b8f9b7833fa37166$var$render","innerHtml","murkup","map","task","index","concat","join","innerHTML","$b8f9b7833fa37166$var$onSave","setItem","stringify","addEventListener","e","preventDefault","elements","taskName","value","trim","push","target","tagName","dataset","splice"],"version":3,"file":"index.ee162c24.js.map"}